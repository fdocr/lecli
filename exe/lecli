#!/usr/bin/env ruby

require 'thor'
require 'yaml'
require 'lecli'

# Class in charge of the CLI functionallity powered by Thor
class LECLIRunner < Thor
  desc 'version', 'Prints out the gem version'
  def version
    puts LECLI::VERSION
  end

  desc 'yaml', 'Generates the options file with defaults to customize'
  option :override,
         type: :boolean,
         aliases: [:o],
         desc: 'Overrides the existing options file the defaults.'
  def yaml
    LECLI::CertificateBuilder.persist_defaults_file(
      override: options[:override]
    )
  end

  desc 'generate', 'Requests and outputs Let\'s Encrypt SSL Certificates'
  option :production,
         type: :boolean,
         aliases: [:p],
         desc: 'Use Let\'s Encrypt production API endpoint.'
  option :config_file,
         default: '.lecli.yml',
         aliases: [:f],
         desc: 'Specify the path of the configuration file.'
  def generate
    config_path = options[:config_file]
    opts = LECLI::CertificateBuilder.load_options(config_file: config_path)
    if opts.nil? # Bail if options can't be loaded properly
      puts 'Unable to locate .lecli.yml file. Try `lecli help generate`'
      return
    end

    builder = LECLI::CertificateBuilder.new do |b|
      b.production = options[:production]
    end
    builder.generate_certs(opts)
    puts 'Certificates generated successfully!'

    script_path = File.expand_path(opts['success_callback_script'])
    return if File.file?(script_path)
    puts "Executing now success callback script `#{script_path}`..."
    success = system(".#{script_path}")
    puts "Let's Encrypt certificates generated successfully" if success
  end
end

LECLIRunner.start(ARGV)
